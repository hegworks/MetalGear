#include "precomp.h"
#include "levelMaps.h"

LevelMaps::LevelMaps()
{
	const int levelMapsTemp[TOTAL_LEVEL_MAPS][LEVELMAP_ROWS][LEVELMAP_COLS] =
	{
	{ // 0
	{2,2,2,3,8,9,9,10,8,9,9,10,132,132,132,132,132,132,132,132,8,9,9,10,8,9,9,10,2,2,2,3},
	{18,19,18,19,25,26,26,27,25,26,26,27,132,132,132,132,132,132,132,132,25,26,26,27,25,26,26,27,18,19,18,19},
	{2,34,2,2,25,26,26,27,25,26,26,27,132,132,132,132,132,132,132,132,25,26,26,27,25,26,26,27,2,34,2,2},
	{18,19,19,18,50,51,51,52,50,51,51,52,132,132,132,132,132,132,132,132,50,51,51,52,50,51,51,52,18,19,19,18},
	{68,69,70,71,64,65,66,67,68,69,70,71,59,59,59,59,59,59,59,59,64,65,66,67,68,69,70,71,64,65,66,67},
	{82,83,84,85,78,79,80,81,82,83,84,85,59,62,62,62,62,62,62,62,78,79,80,81,82,83,84,85,78,79,80,81},
	{96,97,98,99,92,93,94,95,96,97,98,99,59,62,62,62,62,62,62,62,92,93,94,95,96,97,98,99,92,93,94,95},
	{107,108,109,110,103,104,105,106,107,108,109,110,59,62,62,62,62,62,62,62,103,104,105,106,107,108,109,110,103,104,105,106},
	{117,118,70,71,113,114,115,116,117,118,59,59,59,62,62,62,62,62,62,62,113,114,115,116,117,118,59,59,113,114,115,116},
	{129,130,84,85,125,126,127,128,129,130,59,62,62,62,62,62,62,62,62,62,125,126,127,128,129,130,59,62,125,126,127,128},
	{140,141,98,99,136,137,138,139,140,141,59,62,62,62,62,62,62,62,62,62,136,137,138,139,140,141,59,62,136,137,138,139},
	{59,59,109,110,62,146,59,59,59,59,59,62,62,62,62,62,62,62,62,62,62,146,59,59,59,59,59,62,62,146,59,59},
	{310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310},
	{311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311},
	{311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311},
	{312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312},
	{70,72,73,71,70,72,73,71,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,70,72,73,71},
	{84,86,87,85,84,86,87,85,314,315,314,315,314,315,314,315,314,315,314,315,314,315,314,315,314,315,314,315,84,86,87,85},
	{98,100,101,99,98,100,101,99,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,98,100,101,99},
	{109,111,112,110,109,111,112,110,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,109,111,112,110},
	{314,315,314,315,314,315,314,315,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,314,315,314,315},
	{317,316,317,316,317,316,317,316,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,317,316,317,316},
	{316,317,316,317,316,317,316,317,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,316,317,316,317},
	{317,316,317,316,317,316,317,316,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,316,317,317,316,317,316},
	},
	};

	const int levelCollidersTemp[TOTAL_LEVEL_MAPS][LEVELMAP_ROWS][LEVELMAP_COLS] =
	{
	{ // 0
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,324,324,324,324,324,324,324,324,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,323,323,323,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,323,323,323,323,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,323,-1,-1,323,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,-1,-1,-1,-1,323,-1,-1,323,-1,-1,-1},
	{-1,-1,-1,323,323,323,323,323,323,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,323,323,323,323,323,323,-1,-1,323,323,323,323},
	{-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,323,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
	},
	};

	// Manually copy the temporary arrays to the member array
	for(int i = 0; i < TOTAL_LEVEL_MAPS; ++i)
	{
		for(int j = 0; j < LEVELMAP_ROWS; ++j)
		{
			for(int k = 0; k < LEVELMAP_COLS; ++k)
			{
				levelMaps[i][j][k] = levelMapsTemp[i][j][k];
			}
		}
	}

	for(int i = 0; i < TOTAL_LEVEL_MAPS; ++i)
	{
		for(int j = 0; j < LEVELMAP_ROWS; ++j)
		{
			for(int k = 0; k < LEVELMAP_COLS; ++k)
			{
				levelColliders[i][j][k] = levelCollidersTemp[i][j][k];
			}
		}
	}
}

int** LevelMaps::GetLevelMapPointers(int id)
{
	int** maps = new int* [LEVELMAP_ROWS];
	for(int i = 0; i < LEVELMAP_ROWS; ++i)
	{
		maps[i] = levelMaps[id][i];
	}
	return maps;
}

int** LevelMaps::GetLevelColliderPointers(int id)
{
	int** colliders = new int* [LEVELMAP_ROWS];
	for(int i = 0; i < LEVELMAP_ROWS; ++i)
	{
		colliders[i] = levelColliders[id][i];
	}
	return colliders;
}
